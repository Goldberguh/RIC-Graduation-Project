/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ourscheduler;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Sim
 */
public class ClassEditFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClassEditFrame
     */
    public ClassEditFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchBar.setText("Enter class ID or name...");
        searchBar.setToolTipText("");
        searchBar.setDragEnabled(true);
        searchBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBarMouseClicked(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course_Num", "Subject", "Course Name", "Room", "Professor Name", "Days", "Start Time",
                "End Time", "Date Start", "Date End", "Credits"
            }
        )
        {public boolean isCellEditable(int row, int col)
            {
                if(col == 0)
                {
                    return false;
                }
                else
                {
                    return true;
                }
            }
        }
    );
    jTable1.setFocusable(false);
    jTable1.setGridColor(new java.awt.Color(0, 0, 0));
    jTable1.setRowHeight(32);
    jTable1.setSelectionBackground(new java.awt.Color(102, 102, 255));
    jTable1.getTableHeader().setReorderingAllowed(false);
    jTable1.setShowGrid(true);
    jScrollPane2.setViewportView(jTable1);

    jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jButton2.setText("Edit Selected Class");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jPanel1.setBackground(new java.awt.Color(133, 1, 1));
    jPanel1.setForeground(new java.awt.Color(254, 234, 119));

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(254, 234, 119));
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("Edit Class");

    jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jButton3.setText("Logout");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jButton4.setText("Return");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jButton4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3)))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton3)
                .addComponent(jButton4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(26, 26, 26))
    );

    jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jButton5.setText("Delete");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5)
                    .addGap(18, 18, 18)
                    .addComponent(jButton2)))
            .addContainerGap())
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jButton5))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Search Button
        Connection conn = databaseQuery.getConnection();
        PreparedStatement psID = null;
        PreparedStatement psName = null;
        ResultSet rs;
        ResultSet rs2;

        int courseID;
        int courseNum;
        String subject;
        String courseName;
        String roomNum;
        String profLName;
        String days;
        String timeStart;
        String timeEnd;
        String dateStart;
        String dateEnd;
        int credits;

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);

        try
        {
            int tryID = Integer.parseInt(searchBar.getText());
            psID = conn.prepareStatement("SELECT * FROM `course` WHERE `course`.`Course_Num` = ?");
            psID.setInt(1, tryID);

            rs = psID.executeQuery();

            while(rs.next())
            {
                courseID = rs.getInt("Course_ID");
                courseNum = rs.getInt("Course_Num");
                subject = rs.getString("Subject");
                courseName = rs.getString("Course_Name");
                roomNum = rs.getString("Room_Num");
                profLName = rs.getString("prof_LName");
                days = rs.getString("Days");
                timeStart = rs.getString("Time_Start");
                timeEnd = rs.getString("Time_End");
                dateStart = rs.getString("Date_Start");
                dateEnd = rs.getString("Date_End");
                credits = rs.getInt("Credits");

                Object[] row = {courseID, courseNum, subject, courseName, roomNum, profLName, days, timeStart, timeEnd, dateStart, dateEnd, credits};

                model.addRow(row);

            }

        }
        catch (SQLException ex)
        {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(NumberFormatException e)
        {

        }

        try
        {
            psName = conn.prepareStatement("SELECT * FROM `course` WHERE `course`.`Course_Name` LIKE ?;");

            psName.setString(1, "%" + searchBar.getText() + "%");

            rs2 = psName.executeQuery();

            while(rs2.next())
            {
                courseID = rs2.getInt("Course_ID");
                courseNum = rs2.getInt("Course_Num");
                subject = rs2.getString("Subject");
                courseName = rs2.getString("Course_Name");
                roomNum = rs2.getString("Room_Num");
                profLName = rs2.getString("prof_LName");
                days = rs2.getString("Days");
                timeStart = rs2.getString("Time_Start");
                timeEnd = rs2.getString("Time_End");
                dateStart = rs2.getString("Date_Start");
                dateEnd = rs2.getString("Date_End");
                credits = rs2.getInt("Credits");

                Object[] row = {courseID, courseNum, subject, courseName, roomNum, profLName, days, timeStart, timeEnd, dateStart, dateEnd, credits};

                model.addRow(row);

            }

        }
        catch (SQLException ex)
        {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        LoginFrame log = new LoginFrame();
        log.setVisible(true);
        log.pack();
        log.setLocationRelativeTo(null);
        log.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        adminHFrame ahome = new adminHFrame();
        ahome.setVisible(true);
        ahome.pack();
        ahome.setLocationRelativeTo(null);
        ahome.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Edit Class Button
        
        int row = jTable1.getSelectedRow();
        
        
            if(row == -1)
            {
                JOptionPane.showMessageDialog(null, "Select a class first");
            }
            else
            {
                int response = JOptionPane.showConfirmDialog(this, "Are you sure you wish to edit this class?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                
                if (response ==JOptionPane.YES_OPTION)
                {
                    String stringID = String.valueOf(jTable1.getModel().getValueAt(row, 0));                     
                    int editID = Integer.valueOf(stringID);                    
                    String stringNumID = String.valueOf(jTable1.getModel().getValueAt(row, 1)); 
                    int editNumID = Integer.valueOf(stringNumID);;
                    String editSub = (String)jTable1.getModel().getValueAt(row, 2);
                    String editCName = (String)jTable1.getModel().getValueAt(row, 3);
                    String editRoom = (String)jTable1.getModel().getValueAt(row, 4);
                    String editProf = (String)jTable1.getModel().getValueAt(row, 5);
                    String editDays = (String)jTable1.getModel().getValueAt(row, 6);
                    String editTStart = (String)jTable1.getModel().getValueAt(row, 7);
                    String editTEnd = (String)jTable1.getModel().getValueAt(row, 8);
                    String editDStart = (String)jTable1.getModel().getValueAt(row, 9);
                    String editDEnd = (String)jTable1.getModel().getValueAt(row, 10);
                    String stringEdit = String.valueOf(jTable1.getModel().getValueAt(row, 11));
                    int editCred = Integer.valueOf(stringEdit);
                    
                    Connection conn = databaseQuery.getConnection();
                    PreparedStatement psEdit = null;
                    ResultSet rs;
                   
                    try
                    {
                        psEdit = conn.prepareStatement("UPDATE `course` SET `Course_ID` = ?, `Course_Num` = ?, `Subject` = ?, `Course_Name` = ?, `Room_Num` = ?,`prof_LName` = ?,`Days` = ?,`Time_Start` = ?, `Time_End` = ?, `Date_Start` = ?, `Date_End` = ?, `Credits` = ? WHERE `Course_ID` = ?");
                                                
                        psEdit.setInt(1, editID);                     
                        psEdit.setInt(2, editNumID);
                        psEdit.setString(3, editSub);
                        psEdit.setString(4, editCName);
                        psEdit.setString(5, editRoom);                
                        psEdit.setString(6, editProf);
                        psEdit.setString(7, editDays);
                        psEdit.setString(8, editTStart);
                        psEdit.setString(9, editTEnd);
                        psEdit.setString(10, editDStart);
                        psEdit.setString(11, editDEnd);                        
                        psEdit.setInt(12, editCred);
                        psEdit.setInt(13, editID);                        
                        //psEdit.setInt(14, editNumID);
                
                        psEdit.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Course Updated");
                        
                    }
                    catch (SQLException ex)
                    {
                        Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Delete Button
        int row = jTable1.getSelectedRow();
        int column = 0;
        
            if(row == -1)
            {
                JOptionPane.showMessageDialog(null, "Select a class first");
            }
            else
            {
                int response = JOptionPane.showConfirmDialog(this, "Are you sure you wish to delete this class?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                
                if (response ==JOptionPane.YES_OPTION)
                {
                    int delID = (int) jTable1.getModel().getValueAt(row, column);
                    int delNumID = (int) jTable1.getModel().getValueAt(row, column + 1); 
                    Connection conn = databaseQuery.getConnection();
                    PreparedStatement psDel = null;
                    ResultSet rs;
                   
                    try
                    {
                        psDel = conn.prepareStatement("DELETE FROM `course` WHERE `course`.`Course_ID` = ? AND `course`.`Course_Num` = ?  ");
                        
                        psDel.setInt(1, delID);
                        psDel.setInt(2, delNumID);
                        
                        psDel.executeUpdate();
                        
                        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                        model.removeRow(row);
                        
                    }
                    catch (SQLException ex)
                    {
                        Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBarMouseClicked
        // mouse click in searchBar
        searchBar.setText("");
    }//GEN-LAST:event_searchBarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassEditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassEditFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField searchBar;
    // End of variables declaration//GEN-END:variables
}
